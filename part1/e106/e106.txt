rvl@eb: Project $ k3d cluster create --port 8082:31337@agent:0 -p 8081:80@loadbalancer --agents 2
INFO[0000] portmapping '8081:80' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
INFO[0000] Prep: Network                                
INFO[0000] Created network 'k3d-k3s-default'            
INFO[0000] Created image volume k3d-k3s-default-images  
INFO[0000] Starting new tools node...                   
INFO[0000] Starting Node 'k3d-k3s-default-tools'        
INFO[0001] Creating node 'k3d-k3s-default-server-0'     
INFO[0001] Creating node 'k3d-k3s-default-agent-0'      
INFO[0001] Creating node 'k3d-k3s-default-agent-1'      
INFO[0001] Creating LoadBalancer 'k3d-k3s-default-serverlb' 
INFO[0001] Using the k3d-tools node to gather environment information 
INFO[0001] HostIP: using network gateway 172.21.0.1 address 
INFO[0001] Starting cluster 'k3s-default'               
INFO[0001] Starting servers...                          
INFO[0001] Starting Node 'k3d-k3s-default-server-0'     
INFO[0007] Starting agents...                           
INFO[0007] Starting Node 'k3d-k3s-default-agent-0'      
INFO[0007] Starting Node 'k3d-k3s-default-agent-1'      
INFO[0017] Starting helpers...                          
INFO[0017] Starting Node 'k3d-k3s-default-serverlb'     
INFO[0024] Injecting records for hostAliases (incl. host.k3d.internal) and for 4 network members into CoreDNS configmap... 
INFO[0026] Cluster 'k3s-default' created successfully!  
INFO[0026] You can now use it like this:                
kubectl cluster-info
rvl@eb: Project $ kubectl apply -f manifests/deployment.yaml
deployment.apps/proj01-dep created
rvl@eb: Project $ kubectl apply -f manifests/service.yaml 
service/proj01-svc created
rvl@eb: Project $ curl http://localhost:8082
Hello world from port: 9999rvl@eb: Project $ 
rvl@eb: Project $ 
